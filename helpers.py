import re
from datetime import datetime


def is_valid_cve(cve_id):
    current_year = datetime.now().year

    # CVE-YYYY-NNNN or CVE-YYYY-NNNNN format where YYYY can be any year from 1999 up to the current year
    cve_regex = rf"(?i)^CVE-(19\d{{2}}|20\d{{2}})-\d{{4,}}$"

    # Ensure the year in the CVE ID is not greater than the current year
    match = re.match(cve_regex, cve_id)
    if match:
        year = int(match.group(1))
        if 1999 <= year <= current_year:
            return True
    return False


def cvss_color_calc(cvss_score):
    # Dictionary mapping severity keywords to hex colors
    severity_colors = {
        "CRITICAL": "#d9534f",  # Red
        "HIGH": "#FFA500",  # Orange
        "MEDIUM": "#FFFF00",  # Yellow
        "LOW": "#008000",  # Green
        "INFORMATIONAL": "#5bc0de",  # Blue
    }

    # Convert the text to uppercase for case-insensitive comparison
    text_upper = cvss_score.upper()

    # Iterate over the severity levels and find if any keyword is in the text
    for severity, color in severity_colors.items():
        if severity in text_upper:
            return color

    # Default color if no keyword is found
    return "#808080"  # Gray


def cve_status_color_calc(status):
    status_colors = {
        "published": "#BBCAE4",
        "rejected": "#FACF4C",
        "disputed": "#783DB9",
        "reserved": "#A8AEB1",
    }

    print(status_colors[status.lower()])

    return status_colors[status.lower()]
